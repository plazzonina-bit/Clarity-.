import streamlit as st
import google.generativeai as genai

# Pega tu clave de API aqu칤.
API_KEY = "AIzaSyDEGUJBCiaXwgMyH_9_Az79yNFUjbAJR1w"
genai.configure(api_key=API_KEY)

# Define el "prompt" o instrucci칩n para el modelo de IA.
# Usamos f-strings para insertar las variables directamente en el texto.
prompt_maestro = """
Act칰a como un analista de 칠tica de IA para marketing.
Tu misi칩n es evaluar la siguiente campa침a publicitaria en tres aspectos clave:
1.  **Riesgo de Manipulaci칩n:** Identifica si el mensaje utiliza lenguaje que podr칤a explotar vulnerabilidades emocionales o psicol칩gicas.
2.  **An치lisis de Sesgo:** Eval칰a si la segmentaci칩n de la audiencia (basada en los datos que proporcion칩 el usuario) podr칤a perpetuar estereotipos o excluir a un grupo de forma injusta.
3.  **Verificaci칩n del Contenido 칄tico:** Revisa si el contenido se basa en estereotipos da침inos o si el mensaje es enga침oso.

Analiza la siguiente campa침a:
- Mensaje: {mensaje}
- P칰blico Objetivo: {publico_objetivo}
- Llamada a la Acci칩n: {cta}
- Objetivo: {objetivo}

Devuelve tu an치lisis en un formato claro, con encabezados para cada uno de los tres puntos. Para cada punto, indica el riesgo ("Riesgo Bajo", "Riesgo Moderado", "Riesgo Alto") y explica brevemente el porqu칠.
"""

# --- Interfaz de Usuario con Streamlit ---
st.title("CLARITY - Simulador 칄tico de Campa침as con IA 游뱄丘뒲잺")
st.write("Analiza los posibles riesgos 칠ticos de tu campa침a de marketing antes de lanzarla.")

# Campos de entrada para el usuario.
mensaje_campana = st.text_area("Mensaje de la campa침a publicitaria:", height=150, placeholder="Ej: '춰No te quedes atr치s! Compra ahora y s칠 parte de los ganadores.'")
cta_campana = st.text_input("Llamada a la Acci칩n (CTA):", placeholder="Ej: 'Compra el programa ahora'")
publico_objetivo = st.text_input("P칰blico Objetivo Detallado:", placeholder="Ej: Hombres y mujeres de 22-45 a침os, interesados en fitness y superaci칩n personal.")
objetivo_campana = st.text_input("Objetivo de la Campa침a:", placeholder="Ej: 'Aumentar Ventas'")


# Bot칩n para iniciar el an치lisis.
if st.button("Analizar Campa침a"):
    if mensaje_campana and publico_objetivo and cta_campana and objetivo_campana:
        # Prepara la consulta para la IA usando el "prompt maestro" y los datos del usuario.
        full_prompt = prompt_maestro.format(
            mensaje=mensaje_campana,
            publico_objetivo=publico_objetivo,
            cta=cta_campana,
            objetivo=objetivo_campana
        )

        # Llama a la API de Gemini.
        try:
            model = genai.GenerativeModel('gemini-1.5-flash')
            respuesta_ia = model.generate_content(full_prompt)

            # Muestra la respuesta en la interfaz.
            st.markdown("---")
            st.subheader("Resultados del An치lisis 칄tico")
            st.write(respuesta_ia.text)
        except Exception as e:
            st.error(f"Ocurri칩 un error: {e}")
    else:

        st.warning("Por favor, completa todos los campos para el an치lisis.")

